{"version":3,"sources":["state/State.js","state/StateContext.js","components/nav/NavBar.js","components/nav/NavBarController.js","components/nav/NavContent.js","components/home/Home.js","components/commits/Commits.js","components/repos/Repos.js","components/assignments/Assignments.js","service/MyGitFeedService.js","components/FetchController.js","components/Fetch.js","components/Main.js","components/startup/Splash.js","components/startup/SplashController.js","components/startup/StartUp.js","App.js","index.js"],"names":["ActionType","LOADING","Symbol","FETCH","USER","SELECTED","ASSIGNMENTS","COMMITS","REPOS","API_READY","INITIAL_STATE","fetch","loading","call","name","args","onSuccess","ready","provider","user","avatar","link","pages","selected","home","assignments","commits","repos","StateContext","createContext","StateProvider","children","useReducer","state","action","type","payload","page","copy","dispatch","actions","isLoading","remoteCall","remoteArgs","dispatchCall","dispatchArgs","Math","random","content","PAGE_CONTENT","select","Provider","value","NavBar","hasRounter","onSelect","RouterWrap","BrowserRouter","Fragment","className","src","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","href","to","onChange","e","target","NavBarController","useContext","useState","setProvider","useEffect","defaultProps","routes","path","component","location","key","JSON","stringify","NavContent","map","route","i","exact","render","props","jsonFetch","controller","AbortController","signal","request","headers","then","r","ok","json","Promise","reject","message","error","catch","cancel","abort","console","ping","FetchController","retryCount","setRetryCount","cancelHandler","setCancelHandler","err","setErr","onRetry","onCancel","remoteCallFnNameHashed","remoteCallFnName","split","service","result","actionDispatchName","finally","React","Children","child","cloneElement","Error","onClose","onClick","fillRule","clipRule","Spinner","Fetch","open","setOpen","Main","Splash","SplashController","StartUp","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c981a2c3.chunk.js","sourcesContent":["export const ActionType = {\r\n    LOADING: Symbol('loading'),\r\n    FETCH: Symbol('fetch'),\r\n    USER: Symbol('user'),\r\n    SELECTED: Symbol('selected'),\r\n    ASSIGNMENTS: Symbol('assignments'),\r\n    COMMITS: Symbol('commits'),\r\n    REPOS: Symbol('repos'),\r\n    API_READY: Symbol('api_ready')\r\n}\r\n\r\nexport const Providers = {\r\n    github: 'github',\r\n    gitlab: 'gitlab',\r\n    bitbucket: 'bitbucket'\r\n}\r\n\r\nexport const Pages = {\r\n    home: 'home',\r\n    assignments: 'assignments',\r\n    commits : 'commits',\r\n    repos: 'repos',\r\n}\r\n\r\nexport const INITIAL_STATE = {\r\n    fetch: {\r\n        loading: false,\r\n        call: {\r\n            name: null,\r\n            args: [],\r\n            onSuccess: {\r\n                name: null,\r\n                args: []\r\n            }\r\n        }\r\n    },\r\n    ready: false,\r\n    provider: {\r\n        name: \"Github\",\r\n        user: {\r\n            name: '',\r\n            avatar: null,\r\n            link: '',\r\n            provider: \"Github\"\r\n        },\r\n    },\r\n    pages: {\r\n        selected: Pages.home,\r\n        home: {},\r\n        assignments: {},\r\n        commits: {},\r\n        repos: {}\r\n    }\r\n}\r\n\r\n","import { createContext, useReducer } from 'react';\r\nimport { ActionType, INITIAL_STATE } from './State';\r\n\r\nexport const StateContext = createContext(INITIAL_STATE);\r\n\r\nexport const StateProvider = ({ children }) => {\r\n\r\n    const stateReducer = (state, action) => {\r\n        switch (action.type) {\r\n            case ActionType.API_READY: {\r\n                return { ...state, ready: true }\r\n            }\r\n            case ActionType.LOADING: {\r\n                return { ...state, fetch: { ...state.fetch, loading: action.payload } }\r\n            }\r\n            case ActionType.FETCH: {\r\n                return { ...state, fetch: { ...state.fetch, call: action.payload } }\r\n            }\r\n            case ActionType.USER: {\r\n                return {\r\n                    ...state,\r\n                    provider: {\r\n                        name: action.payload.provider,\r\n                        user: action.payload\r\n                    }\r\n                }\r\n            }\r\n            case ActionType.SELECTED: {\r\n                return { ...state, page: { ...state.page, name: action.payload } }\r\n            }\r\n            case ActionType.ASSIGNMENTS: {\r\n                const copy = { ...state };\r\n                copy.pages.selected = \"assignments\";\r\n                copy.pages.assignments = action.payload;\r\n                return copy;\r\n            }\r\n            case ActionType.COMMITS: {\r\n                const copy = { ...state };\r\n                copy.pages.selected = \"commits\";\r\n                copy.pages.commits = action.payload;\r\n                return copy;\r\n            }\r\n            case ActionType.REPOS: {\r\n                const copy = { ...state };\r\n                copy.pages.selected = \"repos\";\r\n                copy.pages.repos = action.payload;\r\n                return copy;\r\n            }\r\n            default: return state;\r\n        }\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(stateReducer, INITIAL_STATE);\r\n\r\n    const actions = {\r\n        loading: (isLoading) => {\r\n            dispatch({ type: ActionType.LOADING, payload: isLoading })\r\n        },\r\n        fetch: function (remoteCall, remoteArgs, dispatchCall, dispatchArgs) {\r\n            dispatch({\r\n                type: ActionType.FETCH,\r\n                payload: {\r\n                    name: `${remoteCall}#${Math.random() * 10000000}`,\r\n                    args: remoteArgs || [],\r\n                    onSuccess: {\r\n                        name: dispatchCall || null,\r\n                        args: dispatchArgs || [],\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        user: (user) => { dispatch({ type: ActionType.USER, payload: user }) },\r\n        content: (page, content) => dispatch({ type: ActionType.PAGE_CONTENT, payload: { page, content } }),\r\n        select: (page) => dispatch({ type: ActionType.SELECTED, payload: { page } }),\r\n        assignments: (page) => dispatch({ type: ActionType.ASSIGNMENTS, payload: { page } }),\r\n        commits: (page) => dispatch({ type: ActionType.COMMITS, payload: { page } }),\r\n        repos: (page) => dispatch({ type: ActionType.REPOS, payload: { page } }),\r\n        ready: () => dispatch({ type: ActionType.API_READY }),\r\n\r\n    }\r\n\r\n    return (<StateContext.Provider value={{ state, actions }}>{children}</StateContext.Provider>);\r\n};","import { Fragment } from \"react\";\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\nimport './navBar.css'\r\n\r\nexport default function NavBar({ hasRounter, provider, onSelect }) {\r\n    const RouterWrap = hasRounter ? BrowserRouter : Fragment;\r\n    const handleChange = (e) => {\r\n        onSelect(e.target.value);\r\n    }\r\n    return (\r\n        <RouterWrap>\r\n            <nav>\r\n                <div className=\"user\">\r\n                    {provider.user.avatar ?\r\n                        <img src={provider.user.avatar} /> : <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" stroke=\"white\" strokeLinejoin=\"round\" strokeWidth=\"1\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path></svg>}\r\n                    <div className=\"provider\">{provider.name}</div>\r\n                    <a href={provider.user.link}>{provider.user.name}</a>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/assignments\">Assignments</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/repos\">Repos</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/commits\">Commits</Link>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"providers\">\r\n                    <select value={provider.name} onChange={handleChange}>\r\n                        <option value=\"Github\">Github</option>\r\n                        <option value=\"Gitlab\">Gitlab</option>\r\n                        <option value=\"Bitbucket\">Bitbucket</option>\r\n                    </select>\r\n                </div>\r\n            </nav>\r\n        </RouterWrap>\r\n    );\r\n}\r\n\r\nNavBar.defaultProps = {\r\n    hasRounter: false,\r\n    provider: {\r\n        name: \"\",\r\n        user: {\r\n            name: '',\r\n            avatar: null,\r\n            link: ''\r\n        },\r\n    },\r\n    onSelect: (provider) => { }\r\n}","import { useContext, useEffect, useState } from \"react\";\r\nimport { StateContext } from \"../../state/StateContext\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nexport default function NavBarController({ hasRounter }) {\r\n    const { state, actions } = useContext(StateContext);\r\n    const [provider, setProvider] = useState(state.provider.name);\r\n    useEffect(() => {\r\n        actions.fetch(\"user\", [provider], \"user\");\r\n    }, [provider])\r\n    return (<NavBar provider={state.provider} onSelect={setProvider} hasRounter={hasRounter} />)\r\n}\r\n\r\nNavBarController.defaultProps = {\r\n    hasRounter: false,\r\n}","import { Route, Switch } from \"react-router\";\r\nimport Assignments from \"../assignments/Assignments\";\r\nimport Commits from \"../commits/Commits\";\r\nimport Home from \"../home/Home\";\r\nimport Repos from \"../repos/Repos\";\r\n\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        component: Home\r\n    },\r\n    {\r\n        path: \"/commits\",\r\n        component: Commits\r\n    },\r\n    {\r\n        path: \"/repos\",\r\n        component: Repos\r\n    },\r\n    {\r\n        path: \"/assignments\",\r\n        component: Assignments\r\n    }\r\n]\r\n\r\nexport default function NavContent() {\r\n    return (<Switch>\r\n        {routes.map((route, i) => (\r\n            <Route\r\n                exact\r\n                key={i}\r\n                path={route.path}\r\n                render={props => (\r\n                    <route.component {...props} routes={route.routes} />\r\n                )}\r\n            />\r\n        ))}\r\n    </Switch>)\r\n}\r\n","import { useContext } from 'react';\r\nimport { StateContext } from '../../state/StateContext';\r\n\r\nconst Home = () => {\r\n    const {state} = useContext(StateContext);\r\n    return (\r\n        <div>Home</div>\r\n    )\r\n}\r\n\r\nexport default Home","import { useContext, useEffect } from \"react\"\r\nimport { StateContext } from \"../../state/StateContext\"\r\n\r\nexport default function Commits({ location }) {\r\n    const { state, actions } = useContext(StateContext);\r\n    useEffect(() => {\r\n        actions.fetch(\"commits\", [state.provider.name], \"commits\")\r\n    }, [location.key, state.provider.name])\r\n    return (<div>\r\n        <h4>Commits</h4>\r\n        <p>{JSON.stringify(state.pages.commits)}</p>\r\n    </div>)\r\n}","import { useContext, useEffect } from \"react\"\r\nimport { StateContext } from \"../../state/StateContext\"\r\n\r\nexport default function Assignments({ location }) {\r\n    const { state, actions } = useContext(StateContext);\r\n    useEffect(() => {\r\n        actions.fetch(\"repos\", [state.provider.name], \"repos\")\r\n    }, [location.key, state.provider.name])\r\n    return (<div>\r\n        <h4>Owned Repositories</h4>\r\n        <p>{JSON.stringify(state.pages.repos)}</p>\r\n    </div>)\r\n}","import { useContext, useEffect } from \"react\"\r\nimport { StateContext } from \"../../state/StateContext\"\r\n\r\nexport default function Assignments({ location }) {\r\n    const { state, actions } = useContext(StateContext);\r\n    useEffect(() => {\r\n        actions.fetch(\"assignments\", [state.provider.name], \"assignments\")\r\n    }, [location.key, state.provider.name])\r\n    return (<div>\r\n        <h4>Assignments</h4>\r\n        <p>{JSON.stringify(state.pages.assignments)}</p>\r\n    </div>)\r\n}","//TODO: reactive the real base API\r\nconst BASE_API = 'https://my-git-feed.herokuapp.com';\r\n//const BASE_API = 'http://localhost:8080';\r\n\r\n\r\nconst fakeServer = {\r\n    '/check/ping': () => ({}),\r\n\r\n    '/api/github/me': () => ({\r\n        name: \"criske\",\r\n        avatar: \"https://avatars.githubusercontent.com/u/10284893?v=4\",\r\n        url: \"https://github.com/criske\",\r\n        type: \"User\"\r\n    }),\r\n    '/api/gitlab/me': () => { throw new Error(\"Gitlab profile not found\") },\r\n    '/api/bitbucket/me': () => { throw new Error(\"Bitbucket profile not found\") },\r\n\r\n    '/api/github/assignments': () => ({ assignments: \"These are Github assignments\" }),\r\n    '/api/gitlab/assignments': () => { throw new Error(\"Gitlab provider not found\") },\r\n    '/api/bitbucket/assignments': () => { throw new Error(\"Bitbucket provider not found\") },\r\n\r\n\r\n    '/api/github/commits': () => ({ assignments: \"These are Github commits\" }),\r\n    '/api/gitlab/commits': () => { throw new Error(\"Gitlab provider not found\") },\r\n    '/api/bitbucket/commits': () => { throw new Error(\"Bitbucket provider not found\") },\r\n\r\n    '/api/github/repos': () => ({ assignments: \"These are Github repos\" }),\r\n    '/api/gitlab/repos': () => { throw new Error(\"Gitlab provider not found\") },\r\n    '/api/bitbucket/repos': () => { throw new Error(\"Bitbucket provider not found\") },\r\n}\r\n\r\n\r\nconst jsonFetch = (path) => {\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n    const request = fetch(`${BASE_API}${path}`, {\r\n        signal,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(r => {\r\n        if (!r.ok) {\r\n            return r.json().then((e) => {\r\n                return Promise.reject({ message: e.error });\r\n            });\r\n        } else {\r\n            return r.json()\r\n        }\r\n\r\n    })\r\n        .catch((e) => {\r\n            return Promise.reject(e.message)\r\n        });\r\n    const cancel = () => {\r\n        try {\r\n            controller.abort();\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    let id;\r\n    //const cancel = () => { clearTimeout(id) }\r\n    // const request = new Promise((resolve, reject) => {\r\n    //     id = setTimeout(() => {\r\n    //         try {\r\n    //             resolve(fakeServer[path.toLowerCase()]());\r\n    //         } catch (error) {\r\n    //             reject(error.message);\r\n    //         }\r\n    //     }, 5000);\r\n    // });\r\n    return { request, cancel };\r\n}\r\n\r\nexport default {\r\n    ping: () => jsonFetch('/check/ping'),\r\n    user: (provider) => jsonFetch(`/api/${provider}/me`),\r\n    assignments: (provider) => jsonFetch(`/api/${provider}/assignments`),\r\n    commits: (provider) => jsonFetch(`/api/${provider}/commits`),\r\n    repos: (provider) => jsonFetch(`/api/${provider}/repos`)\r\n}","import React, { useContext, useEffect, useReducer, useState } from \"react\"\r\nimport service from \"./../service/MyGitFeedService\";\r\nimport { StateContext } from \"../state/StateContext\";\r\n\r\nexport default function FetchController({ children }) {\r\n\r\n    const { state, actions } = useContext(StateContext);\r\n\r\n    const [retryCount, setRetryCount] = useState(0);\r\n    const [cancelHandler, setCancelHandler] = useState(() => {});\r\n    const [err, setErr] = useState(null);\r\n    \r\n    const onRetry = () => { setRetryCount(retryCount + 1); }\r\n    const onCancel = () => {\r\n        cancelHandler();\r\n        actions.loading(false);\r\n        setErr(\"Canceled\");\r\n    }\r\n\r\n    const remoteCallFnNameHashed = state.fetch.call.name\r\n\r\n    useEffect(() => {\r\n        if (remoteCallFnNameHashed != null) {\r\n            const remoteCallFnName = state.fetch.call.name.split('#')[0]; //remove the hash part\r\n            cancelHandler?.call(null);\r\n            actions.loading(true);\r\n            setErr(null);\r\n            const remoteCall = service[remoteCallFnName]\r\n                .call(null, state.fetch.call.args);\r\n            remoteCall\r\n                .request\r\n                .then((result) => {\r\n                    setErr(null);\r\n                    const actionDispatchName = state.fetch.call.onSuccess.name;\r\n                    actions[actionDispatchName].call(null, result)\r\n                })\r\n                .catch(setErr)\r\n                .finally(() => actions.loading(false));\r\n            setCancelHandler(() => remoteCall.cancel)\r\n        }\r\n    }, [retryCount, remoteCallFnNameHashed]);\r\n    \r\n    const ChildrenWithProps = React.Children.map(children, (child) => {\r\n        return React.cloneElement(child, {\r\n            isLoading: state.fetch.loading,\r\n            error: err,\r\n            onRetry: onRetry,\r\n            onCancel: onCancel\r\n        })\r\n    });\r\n    return ChildrenWithProps;\r\n}","import { useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './fetch.css';\r\n\r\nconst FetchTest = () => {\r\n    const [retry, setRetry] = useState(0);\r\n    const [loadingState, setLoadingState] = useState({\r\n        isLoading: true,\r\n        error: null\r\n    })\r\n    const onRetry = () => setRetry(prev => prev + 1);\r\n    useEffect(() => {\r\n        setLoadingState({ isLoading: true, error: null });\r\n        setTimeout(() => {\r\n            setLoadingState({ isLoading: false, error: \"Error!!!\" });\r\n        }, 5000);\r\n    }, [retry]);\r\n    return (<Fetch isLoading={loadingState.isLoading} error={loadingState.error} onRetry={onRetry}></Fetch>)\r\n}\r\n\r\nexport { FetchTest };\r\n\r\nconst Error = ({ error, onRetry, onClose }) => (\r\n    <div className=\"error-box\">\r\n        <svg onClick={onClose} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n        </svg>\r\n        <p>{error}</p>\r\n        <a onClick={onRetry}>Retry</a>\r\n    </div>\r\n);\r\n\r\nconst Spinner = () => (<div className=\"loading-spinner\" />);\r\n\r\nexport default function Fetch({ isLoading, error, onRetry }) {\r\n    const [showMessage, setShowMessage] = useState(!isLoading && (error !== null));\r\n    const onRetryAfterAnim = () => setShowMessage(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setOpen(!isLoading && error != null)\r\n    }, [isLoading, error])\r\n    \r\n    return (\r\n        <div className=\"fetch-container\">\r\n            {isLoading && <Spinner />}\r\n            {open && <Error error={error} onRetry={onRetry} onClose={() => setOpen(false)} />}\r\n            {/* <CSSTransition in={isLoading}\r\n                timeout={3000}\r\n                unmountOnExit\r\n                onExited={() => setShowMessage(error !== null)}\r\n                classNames=\"loading-fade\">\r\n                <Spinner />\r\n            </CSSTransition>\r\n            {(error!=null) && <CSSTransition\r\n                in={showMessage}\r\n                timeout={3000}\r\n                unmountOnExit\r\n                onExited={onRetry}\r\n                classNames=\"fade\">\r\n                <Error error={error} onRetry={onRetryAfterAnim} />\r\n            </CSSTransition>} */}\r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter } from \"react-router-dom\";\r\nimport NavBarController from \"./nav/NavBarController\";\r\nimport NavContent from \"./nav/NavContent\";\r\nimport './main.css'\r\nimport FetchController from \"./FetchController\";\r\nimport Fetch from \"./Fetch\";\r\n\r\nexport default function Main() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"container\">\r\n                <NavBarController />\r\n                <div className=\"nav-content\">\r\n                    <NavContent />\r\n                </div>\r\n                <FetchController><Fetch/></FetchController>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}","import './splash.css'\r\n\r\nexport default function Splash({ isLoading, error, onRetry, onCancel }) {\r\n    return (\r\n        <div className=\"splash-container\">\r\n            { (isLoading) ?\r\n                <>\r\n                    <h1>Waking up the server</h1>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\" />\r\n                    </svg>\r\n                    <button onClick={onCancel}>Cancel</button>\r\n                </>\r\n                : <div>{error} <button onClick={onRetry}>Retry</button> </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nSplash.defaultProps = {\r\n    onCancel: () => { },\r\n    onRetry: () => { },\r\n    error: null,\r\n    isLoading: false,\r\n}","import { useContext, useEffect } from \"react\";\r\nimport { StateContext } from \"../../state/StateContext\";\r\nimport Splash from \"./Splash\";\r\n\r\nexport default function SplashController(props) {\r\n    const { actions } = useContext(StateContext);\r\n    useEffect(() => {\r\n        actions.fetch(\"ping\", [], \"ready\");\r\n    }, []);\r\n    return (<Splash {...props} />);\r\n}","import { useContext } from \"react\";\r\nimport { StateContext } from \"../../state/StateContext\";\r\nimport Main from \"../Main\";\r\nimport FetchController from \"../FetchController\";\r\nimport SplashController from \"./SplashController\";\r\n\r\nexport default function StartUp() {\r\n    const { state } = useContext(StateContext);\r\n    return (\r\n        <>\r\n            {\r\n                state.ready ? <Main /> : <FetchController><SplashController/></FetchController>\r\n            }\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { StateProvider } from './state/StateContext';\r\nimport StartUp from './components/startup/StartUp';\r\n\r\nfunction App() {\r\n    return (\r\n        <StateProvider>\r\n            <StartUp />\r\n        </StateProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n        <App />\r\n    // </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}